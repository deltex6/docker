PLIK DOCKERFILE:

# syntax=docker/dockerfile:1

FROM scratch AS builder

ADD alpine-minirootfs-3.21.3-x86_64.tar /

ARG VERSION
ENV VERSION=${VERSION}

RUN apk add --no-cache bash busybox-extras

WORKDIR /app

RUN echo "\
<!DOCTYPE html>\n\
<html>\n\
<head><title>Strona Testowa</title></head>\n\
<body>\n\
<h1>Server Info</h1>\n\
<p><strong>IP Address:</strong> \$(hostname -i)</p>\n\
<p><strong>Nazwa Hosta:</strong> \$(hostname)</p>\n\
<p><strong>Wersja Aplikacji:</strong> ${VERSION}</p>\n\
</body>\n\
</html>" > index.html

FROM nginx:alpine AS final

COPY --from=builder /app/index.html /usr/share/nginx/html/index.html

HEALTHCHECK --interval=10s --timeout=5s --start-period=5s --retries=3 \
 CMD wget --spider -q http://localhost || exit 1

CMD ["nginx", "-g", "daemon off;"]



========================================================================
Logi Konsolowe:

//budowanie obrazu
tomas@SwMMKolbe:~/images2$ ls
alpine-minirootfs-3.21.3-x86_64.tar  dockerfile
tomas@SwMMKolbe:~/images2$ docker build --build-arg VERSION=1.0.0 -t lab5-app .
[+] Building 3.4s (15/15) FINISHED                                                     docker:default
 => [internal] load build definition from dockerfile                                             0.0s
 => => transferring dockerfile: 806B                                                             0.0s
 => resolve image config for docker-image://docker.io/docker/dockerfile:1                        1.4s
 => [auth] docker/dockerfile:pull token for registry-1.docker.io                                 0.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:4c68376a702446fc3c79af22de146a14  0.0s
 => => resolve docker.io/docker/dockerfile:1@sha256:4c68376a702446fc3c79af22de146a148bc3367e73c  0.0s
 => [internal] load metadata for docker.io/library/nginx:alpine                                  0.9s
 => [auth] library/nginx:pull token for registry-1.docker.io                                     0.0s
 => [internal] load .dockerignore                                                                0.0s
 => => transferring context: 2B                                                                  0.0s
 => [internal] load build context                                                                0.0s
 => => transferring context: 59B                                                                 0.0s
 => CACHED [final 1/2] FROM docker.io/library/nginx:alpine@sha256:4ff102c5d78d254a6f0da062b3cf3  0.0s
 => => resolve docker.io/library/nginx:alpine@sha256:4ff102c5d78d254a6f0da062b3cf39eaf07f01eec0  0.0s
 => CACHED [builder 1/4] ADD alpine-minirootfs-3.21.3-x86_64.tar /                               0.0s
 => CACHED [builder 2/4] RUN apk add --no-cache bash busybox-extras                              0.0s
 => CACHED [builder 3/4] WORKDIR /app                                                            0.0s
 => [builder 4/4] RUN echo "<!DOCTYPE html>\n<html>\n<head><title>Strona Testowa</title></head>  0.4s
 => [final 2/2] COPY --from=builder /app/index.html /usr/share/nginx/html/index.html             0.0s
 => exporting to image                                                                           0.2s
 => => exporting layers                                                                          0.1s
 => => exporting manifest sha256:a4ee4e68e830d920d3a45c98a5a5d70d0c09b830b1a0209d19089f51309458  0.0s
 => => exporting config sha256:6b6d7ebf80c33050af4f0ef8f37c671ec4f00a14089c39e5355e000237924d36  0.0s
 => => exporting attestation manifest sha256:e7636179e1a70ee1fd9d5dedfc65c4f896940c77213f410fee  0.0s
 => => exporting manifest list sha256:8e92f93a9c9617cea7dabaee834afd7085525972dae26b4bb6429a22d  0.0s
 => => naming to docker.io/library/lab5-app:latest                                               0.0s
 => => unpacking to docker.io/library/lab5-app:latest                                            0.0s

//uruchamianie serwera
tomas@SwMMKolbe:~/images2$ docker run -d -p 8080:80 --name lab5-container lab5-app
79ea0edd2c14ce0580511ff1c9aa288fbf482b16dcfd339ebe0ba1d7f5ed019


//sprawdzanie działania kontenera i poprawnego funkcjonowania opracowanej aplikacji
tomas@SwMMKolbe:~/images2$ docker attach lab5-container

::1 - - [11/Apr/2025:08:28:05 +0000] "GET / HTTP/1.1" 200 267 "-" "Wget" "-"
::1 - - [11/Apr/2025:08:28:15 +0000] "GET / HTTP/1.1" 200 267 "-" "Wget" "-"
::1 - - [11/Apr/2025:08:28:25 +0000] "GET / HTTP/1.1" 200 267 "-" "Wget" "-"

tomas@SwMMKolbe:~/images2$ docker ps
CONTAINER ID   IMAGE      COMMAND                  CREATED          STATUS                        PORTS                  NAMES
79ea0edd2c14   lab5-app   "/docker-entrypoint.…"   16 minutes ago   Up About a minute (healthy)   0.0.0.0:8080->80/tcp   lab5-container


//sprawdzanie działania aplikacji za pomocą narzędzia 'curl'
tomas@SwMMKolbe:~/images2$ docker exec -it lab5-container sh
/ # curl http://localhost
<!DOCTYPE html>\n<html>\n<head><title>Strona Testowa</title></head>\n<body>\n<h1>Server Info</h1>\n<p><strong>IP Address:</strong> $(hostname -i)</p>\n<p><strong>Nazwa Hosta:</strong> $(hostname)</p>\n<p><strong>Wersja Aplikacji:</strong> 1.0.0</p>\n</body>\n</html>
/ # exit

tomas@SwMMKolbe:~/images2$ curl http://localhost:8080
<!DOCTYPE html>\n<html>\n<head><title>Strona Testowa</title></head>\n<body>\n<h1>Server Info</h1>\n<p><strong>IP Address:</strong> $(hostname -i)</p>\n<p><strong>Nazwa Hosta:</strong> $(hostname)</p>\n<p><strong>Wersja Aplikacji:</strong> 1.0.0</p>\n</body>\n</html>
